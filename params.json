{"name":"Express-request-validator","tagline":"A validator middleware for express that can intercept requests, validate request body, params, param and respond with error code, message, all customisable.","body":"# express-request-validator\r\nA validator middleware for express which can intercept requests, validate request body, params, param and respond with error code, message, all customisable.\r\n\r\n## Usage\r\n\r\n```javascript\r\nvar v = require('express-request-validator');\r\napp.route('/api/user')\r\n\t\t.get(v.query('email').notEmpty().isEmail().m(), userManagementController.listUsers)\r\n\t\t.post(v.body('name').notEmpty().m(), \r\n\t\t      v.body('email').isEmail().m(),\r\n\t\t      v.body('password').minlength(7).maxlength(20).m(), \r\n\t\t      userManagementController.create);\r\n\t\t      \r\napp.route('/api/user/:email').get(v.params('email').notEmpty().isEmail().m(), userManagementController.readUser)\t\t      \r\n```\t\t      \r\n\r\n> for validating req.query.{paramname} use v.query method\r\n\r\n> for validating req.params.{paramname} use v.params method\r\n\r\n> for validating req.body.{paramname} use v.body method\r\n\r\n\r\n> .m() returns the middleware.\r\n\r\n## Validations\r\n\r\n> notEmpty()\r\n\r\n> isNumber()\r\n\r\n> isEmail()\r\n\r\n> minLength()\r\n\r\n> maxLength()\r\n","google":"UA-63042286-1","note":"Don't delete this file! It's used internally to help with page regeneration."}